Default Constructor is functional.
Custom Constructor is functional.
Default Constructor is functional.
Custom Constructor is functional.

00007FF706B6A760
Default Constructor is functional.
Custom Constructor is functional.

Date: 21/2/2024 Time: 14:30:34
Default Constructor is functional.
Custom Constructor is functional.

Date: 21/2/2024 Time: 14:35:39
Default Constructor is functional.
Custom Constructor is functional.
Copy Constructor is functional.

Date: 21/2/2024 Time: 14:45:17
Default Constructor is functional.
Custom Constructor is functional.
Copy Constructor is functional.
Destructor untested.
Length() is functional.
CharacterAt() is functional.
EqualTo() is functional.
Append() is functional.
Prepend() is functional.
CStr() is functional.
ToLower() is functional.
ToUpper() is functional.
Find() is functional.
FindFrom() is functional.
Replace() is functional.
ReadFromConsole() is functional.
WriteToConsole() is untested.
== operator is functional.
< operator is functional.
 [] operator is functional.
= operator is functional.
+ operator is functional.
+= operator is functional.

Date: 21/2/2024 Time: 14:47:48
Test 0: Default Constructor is functional.
Test 1: Custom Constructor is functional.
Test 2: Copy Constructor is functional.
Destructor untested.
Test 3: Length() is functional.
Test 4: CharacterAt() is functional.
EqualTo() is functional.
Append() is functional.
Prepend() is functional.
CStr() is functional.
ToLower() is functional.
ToUpper() is functional.
Find() is functional.
FindFrom() is functional.
Replace() is functional.
ReadFromConsole() is functional.
WriteToConsole() is untested.
== operator is functional.
< operator is functional.
 [] operator is functional.
= operator is functional.
+ operator is functional.
+= operator is functional.

Date: 21/2/2024 Time: 14:50:30
Test 00: Default Constructor is functional.
Test 01: Custom Constructor is functional.
Test 02: Copy Constructor is functional.
Test 03: Destructor untested.
Test 04: Length() is functional.
Test 05: CharacterAt() is functional.
Test 06: EqualTo() is functional.
Test 07: Append() is functional.
Test 08: Prepend() is functional.
Test 09: CStr() is functional.
Test 10: ToLower() is functional.
Test 11: ToUpper() is functional.
Test 12: Find() is functional.
Test 13: FindFrom() is functional.
Test 14: Replace() is functional.
Test 15: ReadFromConsole() is functional.
Test 16: WriteToConsole() is untested.
Test 17: == operator is functional.
Test 18: < operator is functional.
Test 19:  [] operator is functional.
Test 20: = operator is functional.
Test 21: + operator is functional.
Test 22: += operator is functional.

Date: 21/2/2024 Time: 14:54:24
Test 00 FUNCTIONAL: Default Constructor.
Test 01 FUNCTIONAL: Custom Constructor.
Test 02: Copy Constructor is functional.
Test 03 UNTESTED: Destructor.
Test 04: Length() is functional.
Test 05: CharacterAt() is functional.
Test 06: EqualTo() is functional.
Test 07: Append() is functional.
Test 08: Prepend() is functional.
Test 09: CStr() is functional.
Test 10: ToLower() is functional.
Test 11: ToUpper() is functional.
Test 12: Find() is functional.
Test 13: FindFrom() is functional.
Test 14: Replace() is functional.
Test 15: ReadFromConsole() is functional.
Test 16: WriteToConsole() is untested.
Test 17: == operator is functional.
Test 18: < operator is functional.
Test 19:  [] operator is functional.
Test 20: = operator is functional.
Test 21: + operator is functional.
Test 22: += operator is functional.

Date: 21/2/2024 Time: 15:0:42
Test 00 FUNCTIONAL: Default Constructor.
Test 01 FUNCTIONAL: Custom Constructor.
Test 02 FUNCTIONAL: Copy Constructor.
Test 03 UNTESTED: Destructor.
Test 04 FUNCTIONAL: Length().
Test 05 FUNCTIONAL: CharacterAt().
Test 06 FUNCTIONAL: EqualTo().
Test 07: Append() is functional.
Test 08: Prepend() is functional.
Test 09: CStr() is functional.
Test 10: ToLower() is functional.
Test 11: ToUpper() is functional.
Test 12: Find() is functional.
Test 13: FindFrom() is functional.
Test 14: Replace() is functional.
Test 15: ReadFromConsole() is functional.
Test 16: WriteToConsole() is untested.
Test 17: == operator is functional.
Test 18: < operator is functional.
Test 19:  [] operator is functional.
Test 20: = operator is functional.
Test 21: + operator is functional.
Test 22: += operator is functional.

Date: 21/2/2024 Time: 15:14:13
Test 00 FUNCTIONAL: Default Constructor.
Test 01 FUNCTIONAL: Custom Constructor.
Test 02 FUNCTIONAL: Copy Constructor.
Test 03 UNTESTED: Destructor.
Test 04 FUNCTIONAL: Length().
Test 05 FUNCTIONAL: CharacterAt().
Test 06 FUNCTIONAL: EqualTo().
Test 07 FUNCTIONAL: Append().
Test 08 FUNCTIONAL: Prepend().
Test 09 UNTESTED: CStr().
Test 10 FUNCTIONAL: ToLower().
Test 11 FUNCTIONAL: ToUpper().
Test 12 FUNCTIONAL: Find().
Test 13 FUNCTIONAL: FindFrom().
Test 14 FUNCTIONAL: Replace().
Test 15 FUNCTIONAL: ReadFromConsole().
Test 16 UNTESTED: WriteToConsole().
Test 17 FUNCTIONAL: == operator.
Test 18 FUNCTIONAL: < operator.
Test 19 FUNCTIONAL: [] operator.
Test 20 FUNCTIONAL: = operator.
Test 21 FUNCTIONAL: + operator.
Test 22 FUNCTIONAL: += operator.

Date: 21/2/2024 Time: 15:17:26
Test 00 FUNCTIONAL:	 Default Constructor.
Test 01 FUNCTIONAL:	 Custom Constructor.
Test 02 FUNCTIONAL: Copy Constructor.
Test 03 UNTESTED: Destructor.
Test 04 FUNCTIONAL: Length().
Test 05 FUNCTIONAL: CharacterAt().
Test 06 FUNCTIONAL: EqualTo().
Test 07 FUNCTIONAL: Append().
Test 08 FUNCTIONAL: Prepend().
Test 09 UNTESTED: CStr().
Test 10 FUNCTIONAL: ToLower().
Test 11 FUNCTIONAL: ToUpper().
Test 12 FUNCTIONAL: Find().
Test 13 FUNCTIONAL: FindFrom().
Test 14 FUNCTIONAL: Replace().
Test 15 FUNCTIONAL: ReadFromConsole().
Test 16 UNTESTED: WriteToConsole().
Test 17 FUNCTIONAL: == operator.
Test 18 FUNCTIONAL: < operator.
Test 19 FUNCTIONAL: [] operator.
Test 20 FUNCTIONAL: = operator.
Test 21 FUNCTIONAL: + operator.
Test 22 FUNCTIONAL: += operator.

Date: 21/2/2024 Time: 15:20:25
Test 00 FUNCTIONAL:	 Default Constructor.
Test 01 FUNCTIONAL:	 Custom Constructor.
Test 02 FUNCTIONAL:	Copy Constructor.
Test 03 UNTESTED:			 Destructor.
Test 04 FUNCTIONAL:	Length().
Test 05 FUNCTIONAL:	CharacterAt().
Test 06 FUNCTIONAL:	EqualTo().
Test 07 FUNCTIONAL:	Append().
Test 08 FUNCTIONAL:	Prepend().
Test 09 UNTESTED:			 CStr().
Test 10 FUNCTIONAL:	ToLower().
Test 11 FUNCTIONAL:	 ToUpper().
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:			 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:21:56
Test 00 FUNCTIONAL:	 Default Constructor.
Test 01 FUNCTIONAL:	 Custom Constructor.
Test 02 FUNCTIONAL:	 Copy Constructor.
Test 03 UNTESTED:	 Destructor.
Test 04 FUNCTIONAL:	 Length().
Test 05 FUNCTIONAL:	 CharacterAt().
Test 06 FUNCTIONAL:	 EqualTo().
Test 07 FUNCTIONAL:	 Append().
Test 08 FUNCTIONAL:	 Prepend().
Test 09 UNTESTED:	CStr().
Test 10 FUNCTIONAL:	 ToLower().
Test 11 FUNCTIONAL:	 ToUpper().
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:			 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:22:32
Test 00 FUNCTIONAL:	 Default Constructor.
Test 01 FUNCTIONAL:	 Custom Constructor.
Test 02 FUNCTIONAL:	 Copy Constructor.
Test 03 UNTESTED:	 Destructor.
Test 04 FUNCTIONAL:	 Length().
Test 05 FUNCTIONAL:	 CharacterAt().
Test 06 FUNCTIONAL:	 EqualTo().
Test 07 FUNCTIONAL:	 Append().
Test 08 FUNCTIONAL:	 Prepend().
Test 09 UNTESTED:	 CStr().
Test 10 FUNCTIONAL:	 ToLower().
Test 11 FUNCTIONAL:	 ToUpper().
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:	 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:25:17
Test 00 FUNCTIONAL:	 Default Constructor.
Test 01 FUNCTIONAL:	 Custom Constructor.
Test 02 FUNCTIONAL:	 Copy Constructor.
Test 03 UNTESTED:	 Destructor.
Test 04 FUNCTIONAL:	 Length().
Test 05 FUNCTIONAL:	 CharacterAt().
Test 06 FUNCTIONAL:	 EqualTo().
Test 07 FUNCTIONAL:	 Append().
Test 08 FUNCTIONAL:	 Prepend().
Test 09 UNTESTED:	 CStr().
Test 10 FUNCTIONAL:	 ToLower().
Test 11 FUNCTIONAL:	 ToUpper().
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:	 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:26:53
Test 00 FUNCTIONAL:	 Default Constructor.
Test 01 FUNCTIONAL:	 Custom Constructor.
Test 02 FUNCTIONAL:	 Copy Constructor.
Test 03 UNTESTED:	 Destructor.
Test 04 FUNCTIONAL:	 Length().
Test 05 FUNCTIONAL:	 CharacterAt().
Test 06 FUNCTIONAL:	 EqualTo().
Test 07 FUNCTIONAL:	 Append().
Test 08 FUNCTIONAL:	 Prepend().
Test 09 UNTESTED:	 CStr().
Test 10 FUNCTIONAL:	 ToLower().
Test 11 FUNCTIONAL:	 ToUpper().
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:	 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:51:9
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	 Custom Constructor
Test 02 FUNCTIONAL:	 Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	 Length()
Test 05 FUNCTIONAL:	 CharacterAt()
Test 06 FUNCTIONAL:	 EqualTo()
Test 07 FUNCTIONAL:	 Append()
Test 08 FUNCTIONAL:	 Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	 ToLower()
Test 11 FUNCTIONAL:	 ToUpper()
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:	 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 != operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:53:4
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	 Custom Constructor
Test 02 FUNCTIONAL:	 Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	 Length()
Test 05 FUNCTIONAL:	 CharacterAt()
Test 06 FUNCTIONAL:	 EqualTo()
Test 07 FUNCTIONAL:	 Append()
Test 08 FUNCTIONAL:	 Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	 ToLower()
Test 11 FUNCTIONAL:	 ToUpper()
Test 12 FUNCTIONAL:	 Find().
Test 13 FUNCTIONAL:	 FindFrom().
Test 14 FUNCTIONAL:	 Replace().
Test 15 FUNCTIONAL:	 ReadFromConsole().
Test 16 UNTESTED:	 WriteToConsole().
Test 17 FUNCTIONAL:	 == operator.
Test 18 FUNCTIONAL:	 != operator.
Test 18 FUNCTIONAL:	 < operator.
Test 19 FUNCTIONAL:	 [] operator.
Test 20 FUNCTIONAL:	 = operator.
Test 21 FUNCTIONAL:	 + operator.
Test 22 FUNCTIONAL:	 += operator.

Date: 21/2/2024 Time: 15:59:44
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	 Custom Constructor
Test 02 FUNCTIONAL:	 Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	 Length()
Test 05 FUNCTIONAL:	 CharacterAt()
Test 06 FUNCTIONAL:	 EqualTo()
Test 07 FUNCTIONAL:	 Append()
Test 08 FUNCTIONAL:	 Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	 ToLower()
Test 11 FUNCTIONAL:	 ToUpper()
Test 12 FUNCTIONAL:	 Find()
Test 13 FUNCTIONAL:	 FindFrom()
Test 14 FUNCTIONAL:	 Replace()
Test 15 FUNCTIONAL:	 ReadFromConsole()
Test 16 UNTESTED:	 WriteToConsole()
Test 17 FUNCTIONAL:	 == operator
Test 18 FUNCTIONAL:	 != operator
Test 18 FUNCTIONAL:	 < operator
Test 19 FUNCTIONAL:	 [] operator
Test 20 FUNCTIONAL:	 = operator
Test 21 FUNCTIONAL:	 + operator
Test 22 FUNCTIONAL:	 += operator

Date: 21/2/2024 Time: 16:9:27
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	 Custom Constructor
Test 02 FUNCTIONAL:	 Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	 Length()
Test 05 FUNCTIONAL:	 CharacterAt()
Test 06 FUNCTIONAL:	 EqualTo()
Test 07 FUNCTIONAL:	 Append()
Test 08 FUNCTIONAL:	 Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	 ToLower()
Test 11 FUNCTIONAL:	 ToUpper()
Test 12 FUNCTIONAL:	 Find()
Test 13 FUNCTIONAL:	 FindFrom()
Test 14 FUNCTIONAL:	 Replace()
Test 15 FUNCTIONAL:	 ReadFromConsole()
Test 16 UNTESTED:	 WriteToConsole()
Test 17 FUNCTIONAL:	 == operator
Test 18 FUNCTIONAL:	 != operator
Test 18 FUNCTIONAL:	 < operator
Test 19 FUNCTIONAL:	 [] operator
Test 20 FUNCTIONAL:	 = operator
Test 21 FUNCTIONAL:	 + operator
Test 22 FUNCTIONAL:	 += operator

Date: 21/2/2024 Time: 16:17:46
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	 Custom Constructor
Test 02 FUNCTIONAL:	 Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	 Length()
Test 05 FUNCTIONAL:	 CharacterAt()
Test 06 FUNCTIONAL:	 EqualTo()
Test 07 FUNCTIONAL:	 Append()
Test 08 FUNCTIONAL:	 Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	 ToLower()
Test 11 FUNCTIONAL:	 ToUpper()
Test 12 FUNCTIONAL:	 Find()
Test 13 FUNCTIONAL:	 FindFrom()
Test 14 FUNCTIONAL:	 Replace()
Test 15 FUNCTIONAL:	 ReadFromConsole()
Test 16 UNTESTED:	 WriteToConsole()
Test 17 FUNCTIONAL:	 == operator
Test 18 FUNCTIONAL:	 != operator
Test 18 FUNCTIONAL:	 < operator
Test 19 FUNCTIONAL:	 [] operator
Test 20 FUNCTIONAL:	 = operator
Test 21 FUNCTIONAL:	 + operator
Test 22 NOT FUNCTIONAL: += operator

Date: 21/2/2024 Time: 16:18:35
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	 Custom Constructor
Test 02 FUNCTIONAL:	 Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	 Length()
Test 05 FUNCTIONAL:	 CharacterAt()
Test 06 FUNCTIONAL:	 EqualTo()
Test 07 FUNCTIONAL:	 Append()
Test 08 FUNCTIONAL:	 Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	 ToLower()
Test 11 FUNCTIONAL:	 ToUpper()
Test 12 FUNCTIONAL:	 Find()
Test 13 FUNCTIONAL:	 FindFrom()
Test 14 FUNCTIONAL:	 Replace()
Test 15 FUNCTIONAL:	 ReadFromConsole()
Test 16 UNTESTED:	 WriteToConsole()
Test 17 FUNCTIONAL:	 == operator
Test 18 FUNCTIONAL:	 != operator
Test 18 FUNCTIONAL:	 < operator
Test 19 FUNCTIONAL:	 [] operator
Test 20 FUNCTIONAL:	 = operator
Test 21 FUNCTIONAL:	 + operator
Test 22 NOT FUNCTIONAL:	+= operator

Date: 21/2/2024 Time: 16:26:24
Test 00 FUNCTIONAL:	 Default Constructor
Test 01 FUNCTIONAL:	Custom Constructor
Test 02 FUNCTIONAL:	Copy Constructor
Test 03 UNTESTED:	 Destructor
Test 04 FUNCTIONAL:	Length()
Test 05 FUNCTIONAL:	CharacterAt()
Test 06 FUNCTIONAL:	EqualTo()
Test 07 FUNCTIONAL:	Append()
Test 08 FUNCTIONAL:	Prepend()
Test 09 UNTESTED:	 CStr()
Test 10 FUNCTIONAL:	ToLower()
Test 11 FUNCTIONAL:	ToUpper()
Test 12 FUNCTIONAL:	Find()
Test 13 FUNCTIONAL:	FindFrom()
Test 14 FUNCTIONAL:	Replace()
Test 15 FUNCTIONAL:	ReadFromConsole()
Test 16 UNTESTED:	 WriteToConsole()
Test 17 FUNCTIONAL:	== operator
Test 18 FUNCTIONAL:	!= operator
Test 18 FUNCTIONAL:	< operator
Test 19 FUNCTIONAL:	[] operator
Test 20 FUNCTIONAL:	= operator
Test 21 FUNCTIONAL:	+ operator
Test 22 NOT FUNCTIONAL: += operator

Date: 21/2/2024 Time: 16:27:30
Test 00 FUNCTIONAL:	Default Constructor
Test 01 FUNCTIONAL:	Custom Constructor
Test 02 FUNCTIONAL:	Copy Constructor
Test 03 UNTESTED:	Destructor
Test 04 FUNCTIONAL:	Length()
Test 05 FUNCTIONAL:	CharacterAt()
Test 06 FUNCTIONAL:	EqualTo()
Test 07 FUNCTIONAL:	Append()
Test 08 FUNCTIONAL:	Prepend()
Test 09 UNTESTED:	CStr()
Test 10 FUNCTIONAL:	ToLower()
Test 11 FUNCTIONAL:	ToUpper()
Test 12 FUNCTIONAL:	Find()
Test 13 FUNCTIONAL:	FindFrom()
Test 14 FUNCTIONAL:	Replace()
Test 15 FUNCTIONAL:	ReadFromConsole()
Test 16 UNTESTED:	WriteToConsole()
Test 17 FUNCTIONAL:	== operator
Test 18 FUNCTIONAL:	!= operator
Test 18 FUNCTIONAL:	< operator
Test 19 FUNCTIONAL:	[] operator
Test 20 FUNCTIONAL:	= operator
Test 21 FUNCTIONAL:	+ operator
Test 22 NOT FUNCTIONAL: += operator

Date: 21/2/2024 Time: 16:28:18
Test 00 FUNCTIONAL:	Default Constructor
Test 01 FUNCTIONAL:	Custom Constructor
Test 02 FUNCTIONAL:	Copy Constructor
Test 03 UNTESTED:	Destructor
Test 04 FUNCTIONAL:	Length()
Test 05 FUNCTIONAL:	CharacterAt()
Test 06 FUNCTIONAL:	EqualTo()
Test 07 FUNCTIONAL:	Append()
Test 08 FUNCTIONAL:	Prepend()
Test 09 UNTESTED:	CStr()
Test 10 FUNCTIONAL:	ToLower()
Test 11 FUNCTIONAL:	ToUpper()
Test 12 FUNCTIONAL:	Find()
Test 13 FUNCTIONAL:	FindFrom()
Test 14 FUNCTIONAL:	Replace()
Test 15 FUNCTIONAL:	ReadFromConsole()
Test 16 UNTESTED:	WriteToConsole()
Test 17 FUNCTIONAL:	== operator
Test 18 FUNCTIONAL:	!= operator
Test 18 FUNCTIONAL:	< operator
Test 19 FUNCTIONAL:	[] operator
Test 20 FUNCTIONAL:	= operator
Test 21 FUNCTIONAL:	+ operator
Test 22 FUNCTIONAL:	+= operator

Date: 21/2/2024 Time: 16:38:43
Test 00 FUNCTIONAL:	Default Constructor
Test 01 FUNCTIONAL:	Custom Constructor
Test 02 FUNCTIONAL:	Copy Constructor
Test 03 UNTESTED:	Destructor
Test 04 FUNCTIONAL:	Length()
Test 05 FUNCTIONAL:	CharacterAt()
Test 06 FUNCTIONAL:	EqualTo()
Test 07 FUNCTIONAL:	Append()
Test 08 FUNCTIONAL:	Prepend()
Test 09 UNTESTED:	CStr()
Test 10 FUNCTIONAL:	ToLower()
Test 11 FUNCTIONAL:	ToUpper()
Test 12 FUNCTIONAL:	Find()
Test 13 FUNCTIONAL:	FindFrom()
Test 14 FUNCTIONAL:	Replace()
Test 15 FUNCTIONAL:	ReadFromConsole()
Test 16 UNTESTED:	WriteToConsole()
Test 17 FUNCTIONAL:	== operator
Test 18 FUNCTIONAL:	!= operator
Test 18 FUNCTIONAL:	< operator
Test 19 FUNCTIONAL:	[] operator
Test 20 FUNCTIONAL:	= operator
Test 21 FUNCTIONAL:	+ operator
Test 22 FUNCTIONAL:	+= operator

Date: 21/2/2024 Time: 16:39:11
Test 00 FUNCTIONAL:	Default Constructor
Test 01 FUNCTIONAL:	Custom Constructor
Test 02 FUNCTIONAL:	Copy Constructor
Test 03 UNTESTED:	Destructor
Test 04 FUNCTIONAL:	Length()
Test 05 FUNCTIONAL:	CharacterAt()
Test 06 FUNCTIONAL:	EqualTo()
Test 07 FUNCTIONAL:	Append()
Test 08 FUNCTIONAL:	Prepend()
Test 09 UNTESTED:	CStr()
Test 10 FUNCTIONAL:	ToLower()
Test 11 FUNCTIONAL:	ToUpper()
Test 12 FUNCTIONAL:	Find()
Test 13 FUNCTIONAL:	FindFrom()
Test 14 FUNCTIONAL:	Replace()
Test 15 FUNCTIONAL:	ReadFromConsole()
Test 16 UNTESTED:	WriteToConsole()
Test 17 FUNCTIONAL:	== operator
Test 18 FUNCTIONAL:	!= operator
Test 18 FUNCTIONAL:	< operator
Test 19 FUNCTIONAL:	[] operator
Test 20 FUNCTIONAL:	= operator
Test 21 FUNCTIONAL:	+ operator
Test 22 FUNCTIONAL:	+= operator
